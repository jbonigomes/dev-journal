{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo/index.js","webpack:///./src/components/layout/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["IndexPage","nodes","_public_static_d_531231610_json__WEBPACK_IMPORTED_MODULE_0__","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","title","target","href","map","post","key","frontmatter","path","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","faClock","date","excerpt","m","module","exports","require","default","SEO","_ref","description","lang","meta","site","_2417117884","metaDescription","siteMetadata","react_default","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Layout","children","Fragment","seo","Date","getFullYear","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"kKAuEeA,UAjEG,WAAM,IACOC,EADPC,EAAAC,KACdC,kBAAqBH,MAiB7B,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,WACZJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,wGAGEF,EAAAC,EAAAC,cAAA,KACEG,OAAO,UACPC,KAAK,0DAFP,cAHF,2YAeEN,EAAAC,EAAAC,cAAA,KACEG,OAAO,UACPC,KAAK,yDAFP,MAfF,8HAuBEN,EAAAC,EAAAC,cAAA,KAAGG,OAAO,UAAUC,KAAK,kCAAzB,gBAvBF,iDA6BCV,EAAMW,IAAI,SAACC,GAAD,OACTR,EAAAC,EAAAC,cAAA,WAASO,IAAKD,EAAKE,YAAYC,MAC7BX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAIL,EAAKE,YAAYC,MACzBX,EAAAC,EAAAC,cAAA,UAAKM,EAAKE,YAAYN,QAExBJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAiBC,KAAMC,MADzB,IACsCR,EAAKE,YAAYO,MAEvDjB,EAAAC,EAAAC,cAAA,SAAIM,EAAKU,mCChEnB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,gPCKzCK,EAAM,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,KAAMC,EAAkBH,EAAlBG,KAAMxB,EAAYqB,EAAZrB,MAC9ByB,EAD0CC,EAAAhC,KAC1C+B,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAhC,EAAAC,cAACgC,EAAAjC,EAAD,CACEkC,eAAgB,CACdR,QAEFvB,MAAOA,EACPgC,cAAa,QAAUP,EAAKG,aAAa5B,MACzCwB,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASlC,GAEX,CACEmC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASlC,GAEX,CACEiC,KAAI,sBACJC,QAASP,IAEXU,OAAOb,MAKfJ,EAAIkB,aAAe,CACjBd,KAAM,GACND,KAAI,KACJD,YAAW,IAUEF,eC3DAmB,IAfA,SAAAlB,GAAA,IAAGrB,EAAHqB,EAAGrB,MAAOwC,EAAVnB,EAAUmB,SAAV,OACbX,EAAAhC,EAAAC,cAAA+B,EAAAhC,EAAA4C,SAAA,KACEZ,EAAAhC,EAAAC,cAAC4C,EAAD,CAAK1C,MAAOA,IACZ6B,EAAAhC,EAAAC,cAAA,YAAO0C,GACPX,EAAAhC,EAAAC,cAAA,mCACoB,IAAI6C,MAAOC,cAD/B,mBAEEf,EAAAhC,EAAAC,cAAA,KAAGG,OAAO,UAAUC,KAAK,4BAAzB,+CCZN,IAAA2C,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAArD,IAAAiD,EAAA,KAAAA,EAAA,GAcyBO,QAAOC,QAELC,IAAMC,cAAc,gFCMhCC,UAjBU,SAAApC,GAAiC,IAA9BqC,EAA8BrC,EAA9BqC,SAAUC,EAAoBtC,EAApBsC,cACpC,OAAKA,EAGEJ,IAAMzD,cAAc8D,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-pages-index-js-6efdc7c2f0cf4501b49f.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { faClock } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst IndexPage = () => {\n  const { allMarkdownRemark: { nodes } } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark {\n          nodes {\n            frontmatter {\n              date(formatString: \"DD MMMM, YYYY\")\n              path\n              title\n            }\n            excerpt\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Layout title='Welcome'>\n      <h1>DEV JOURNAL</h1>\n      <p>\n        Welcome to my dev learning journal, my name is Jose and I am a Software\n        Developer in the {``}\n        <a\n          target='__blank'\n          href='https://www.google.com/maps/@53.4852488,-2.6542747,10z'\n        >\n          North West\n        </a>\n        {``} of England. I decided to start writting a journal to remind myself\n        of the little things I learn every day. Although this is primarily\n        focused as a personal learning experience, I hope others find it as\n        informative and fun as I do. I tried to keep each post as short as\n        possible, revealing a bite size discovery at a time. I work full time as\n        a JavaScript Engineer, you can download my {``}\n        <a\n          target='__blank'\n          href='https://github.com/jbonigomes/CV/raw/master/index.pdf'\n        >\n          CV\n        </a>\n        {``} here or... if you are into web development, JavaScript or have any\n        comments/suggestions about this journal, why not {``}\n        <a target='__blank' href='mailto:jbonigomes@yahoo.com.br'>\n          get in touch\n        </a>\n        {``} or just scroll down to read the articles.\n      </p>\n\n      {nodes.map((post) => (\n        <article key={post.frontmatter.path}>\n          <Link to={post.frontmatter.path}>\n            <h2>{post.frontmatter.title}</h2>\n          </Link>\n          <h3>\n            <FontAwesomeIcon icon={faClock} /> {post.frontmatter.date}\n          </h3>\n          <p>{post.excerpt}</p>\n        </article>\n      ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  meta: [],\n  lang: `en`,\n  description: ``,\n}\n\nSEO.propTypes = {\n  lang: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  meta: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default SEO\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SEO from '../seo'\nimport './index.css'\n\nconst Layout = ({ title, children }) => (\n  <>\n    <SEO title={title} />\n    <main>{children}</main>\n    <footer>\n      jbonigomes.com Â© {new Date().getFullYear()}, Built with {``}\n      <a target='__blank' href='https://www.gatsbyjs.org'>Gatsby</a>\n    </footer>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}
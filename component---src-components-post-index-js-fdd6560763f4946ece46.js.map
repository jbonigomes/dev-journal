{"version":3,"sources":["webpack:///./src/components/post/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo/index.js","webpack:///./src/components/layout/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__","_layout__WEBPACK_IMPORTED_MODULE_4__","Post","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","to","className","icon","faArrowLeft","faClock","date","dangerouslySetInnerHTML","__html","m","module","exports","require","default","SEO","description","lang","meta","site","_2417117884","metaDescription","siteMetadata","react_default","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Layout","children","Fragment","seo","Date","getFullYear","target","href","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAuBeY,UAhBF,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACND,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACEX,EAAAY,EAAAC,cAACR,EAAA,EAAD,CAAQS,MAAOJ,EAAYI,OACzBd,EAAAY,EAAAC,cAACX,EAAA,EAAD,CAAMa,GAAG,IAAIC,UAAU,YACrBhB,EAAAY,EAAAC,cAACV,EAAA,EAAD,CAAiBc,KAAMC,OAEzBlB,EAAAY,EAAAC,cAAA,UAAKH,EAAYI,OACjBd,EAAAY,EAAAC,cAAA,UAAIb,EAAAY,EAAAC,cAACV,EAAA,EAAD,CAAiBc,KAAME,MAA3B,IAAwCT,EAAYU,MACpDpB,EAAAY,EAAAC,cAAA,OAAKQ,wBAAyB,CAAEC,OAAQX,OAOvC,IAAMb,EAAS,kCCzBtB,IAAsByB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,gPCKzCK,EAAM,SAAArB,GAAwC,IAArCsB,EAAqCtB,EAArCsB,YAAaC,EAAwBvB,EAAxBuB,KAAMC,EAAkBxB,EAAlBwB,KAAMjB,EAAYP,EAAZO,MAC9BkB,EAD0CC,EAAAxB,KAC1CuB,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAAxB,EAAAC,cAACwB,EAAAzB,EAAD,CACE0B,eAAgB,CACdR,QAEFhB,MAAOA,EACPyB,cAAa,QAAUP,EAAKG,aAAarB,MACzCiB,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS3B,GAEX,CACE4B,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS3B,GAEX,CACE0B,KAAI,sBACJC,QAASP,IAEXU,OAAOb,MAKfH,EAAIiB,aAAe,CACjBd,KAAM,GACND,KAAI,KACJD,YAAW,IAUED,eC3DAkB,IAfA,SAAAvC,GAAA,IAAGO,EAAHP,EAAGO,MAAOiC,EAAVxC,EAAUwC,SAAV,OACbX,EAAAxB,EAAAC,cAAAuB,EAAAxB,EAAAoC,SAAA,KACEZ,EAAAxB,EAAAC,cAACoC,EAAD,CAAKnC,MAAOA,IACZsB,EAAAxB,EAAAC,cAAA,YAAOkC,GACPX,EAAAxB,EAAAC,cAAA,mCACoB,IAAIqC,MAAOC,cAD/B,mBAEEf,EAAAxB,EAAAC,cAAA,KAAGuC,OAAO,UAAUC,KAAK,4BAAzB,+CCZN,IAAAtD,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAuD,EAAA5D,EAAA,IAAA6D,EAAA7D,EAAAO,EAAAqD,GAAA5D,EAAAG,EAAAD,EAAA,sBAAA2D,EAAA3C,IAAAlB,EAAA,KAAAA,EAAA,GAcyB8D,QAAOC,QAELC,IAAMC,cAAc,gFCMhCC,UAjBU,SAAArD,GAAiC,IAA9BsD,EAA8BtD,EAA9BsD,SAAUC,EAAoBvD,EAApBuD,cACpC,OAAKA,EAGEJ,IAAM7C,cAAckD,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-components-post-index-js-fdd6560763f4946ece46.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClock, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport Layout from '../layout'\n\nconst Post = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n\n  return (\n    <Layout title={frontmatter.title}>\n      <Link to='/' className='backLink'>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </Link>\n      <h1>{frontmatter.title}</h1>\n      <h3><FontAwesomeIcon icon={faClock} /> {frontmatter.date}</h3>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  meta: [],\n  lang: `en`,\n  description: ``,\n}\n\nSEO.propTypes = {\n  lang: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  meta: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default SEO\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SEO from '../seo'\nimport './index.css'\n\nconst Layout = ({ title, children }) => (\n  <>\n    <SEO title={title} />\n    <main>{children}</main>\n    <footer>\n      jbonigomes.com Â© {new Date().getFullYear()}, Built with {``}\n      <a target='__blank' href='https://www.gatsbyjs.org'>Gatsby</a>\n    </footer>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}